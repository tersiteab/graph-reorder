element Vertex end
element Edge end

const edges : edgeset{Edge}(Vertex,Vertex, int) = load ("../test/graphs/test.wel");

const vertices : vertexset{Vertex} = edges.getVertices();

const SP : vector{Vertex}(int) = 2147483647; %should be INT_MAX

% this is a hack, manually returning boolean variables. should use applyModified
func updateEdge(src : Vertex, dst : Vertex, weight : int) -> output : bool
     if SP[dst] > SP[src] + weight
          SP[dst] = SP[src] + weight;
	  output = true;
    else
        output = false;
    end
end

func main()

    startTimer();
    var n : int = edges.getVertices();
    print "number of vertices ";
    print n;
    var frontier : vertexset{Vertex} = new vertexset{Vertex}(0);

    frontier.addVertex(1); %add source vertex
    SP[1] = 0;

    var rounds : int = 0;
    while (frontier.getVertexSetSize() != 0)
        var output : vertexset{Vertex} = edges.from(frontier).apply(updateEdge);
        delete frontier;
        frontier = output;
	    rounds = rounds + 1;
    	if rounds == n
	        print "negative cycle";
	        break;
	    end
    end
    delete frontier;
    print rounds;
    var elapsed_time : float = stopTimer();
    print "elapsed time: ";
    print elapsed_time;

end
